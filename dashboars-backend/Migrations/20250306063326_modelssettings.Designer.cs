// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace dashboars_backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250306063326_modelssettings")]
    partial class modelssettings
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BackupTime", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Checked")
                        .HasColumnType("bit");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BackupTimes");

                    b.HasData(
                        new
                        {
                            Id = "daily",
                            Checked = true,
                            Label = "Daily"
                        },
                        new
                        {
                            Id = "weekly",
                            Checked = false,
                            Label = "Weekly"
                        },
                        new
                        {
                            Id = "monthly",
                            Checked = false,
                            Label = "Monthly"
                        });
                });

            modelBuilder.Entity("GeneralInfo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Placeholder")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ShowLink")
                        .HasColumnType("bit");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GeneralInfos");

                    b.HasData(
                        new
                        {
                            Id = "first",
                            Disabled = false,
                            Label = "First Name",
                            Placeholder = "First Name",
                            ShowLink = false,
                            Type = "text",
                            Value = ""
                        },
                        new
                        {
                            Id = "last",
                            Disabled = false,
                            Label = "Last Name",
                            Placeholder = "Last Name",
                            ShowLink = false,
                            Type = "text",
                            Value = ""
                        },
                        new
                        {
                            Id = "email",
                            Disabled = true,
                            Label = "Email",
                            Placeholder = "Email",
                            ShowLink = true,
                            Type = "email",
                            Value = "o@nn.sa"
                        });
                });

            modelBuilder.Entity("Server", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Checked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Servers");

                    b.HasData(
                        new
                        {
                            Id = "server-one",
                            Checked = false,
                            Name = "Megaman"
                        },
                        new
                        {
                            Id = "server-two",
                            Checked = true,
                            Name = "Zero"
                        },
                        new
                        {
                            Id = "server-three",
                            Checked = false,
                            Name = "Sigma"
                        });
                });

            modelBuilder.Entity("SettingsItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SettingsItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Icon = "fa-regular fa-chart-bar",
                            Link = "index",
                            Name = "Dashboard"
                        },
                        new
                        {
                            Id = 2,
                            Icon = "fa-solid fa-gear",
                            Link = "settings",
                            Name = "Settings"
                        },
                        new
                        {
                            Id = 3,
                            Icon = "fa-regular fa-user",
                            Link = "profile",
                            Name = "Profile"
                        },
                        new
                        {
                            Id = 4,
                            Icon = "fa-solid fa-diagram-project",
                            Link = "projects",
                            Name = "Projects"
                        },
                        new
                        {
                            Id = 5,
                            Icon = "fa-solid fa-graduation-cap",
                            Link = "courses",
                            Name = "Courses"
                        },
                        new
                        {
                            Id = 6,
                            Icon = "fa-regular fa-circle-user",
                            Link = "friends",
                            Name = "Friends"
                        },
                        new
                        {
                            Id = 7,
                            Icon = "fa-regular fa-file",
                            Link = "files",
                            Name = "Files "
                        },
                        new
                        {
                            Id = 8,
                            Icon = "fa-regular fa-credit-card",
                            Link = "plans",
                            Name = "Plans "
                        });
                });

            modelBuilder.Entity("SocialMedia", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Placeholder")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SocialMedias");

                    b.HasData(
                        new
                        {
                            Id = "twitter",
                            Icon = "fa-twitter",
                            Placeholder = "Twitter Username"
                        },
                        new
                        {
                            Id = "facebook",
                            Icon = "fa-facebook-f",
                            Placeholder = "Facebook Username"
                        },
                        new
                        {
                            Id = "linkedin",
                            Icon = "fa-linkedin",
                            Placeholder = "LinkedIn Username"
                        },
                        new
                        {
                            Id = "youtube",
                            Icon = "fa-youtube",
                            Placeholder = "YouTube Username"
                        });
                });

            modelBuilder.Entity("Widget", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Checked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Widgets");

                    b.HasData(
                        new
                        {
                            Id = "one",
                            Checked = true,
                            Name = "Quick Draft"
                        },
                        new
                        {
                            Id = "two",
                            Checked = true,
                            Name = "Yearly Targets"
                        },
                        new
                        {
                            Id = "three",
                            Checked = true,
                            Name = "Tickets Statistics"
                        },
                        new
                        {
                            Id = "four",
                            Checked = true,
                            Name = "Latest News"
                        },
                        new
                        {
                            Id = "five",
                            Checked = false,
                            Name = "Latest Tasks"
                        },
                        new
                        {
                            Id = "six",
                            Checked = true,
                            Name = "Top Search Items"
                        });
                });

            modelBuilder.Entity("menueItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MenuItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Icon = "fa-chart-bar",
                            Label = "Dashboard",
                            Path = "/dashboard"
                        },
                        new
                        {
                            Id = 2,
                            Icon = "fa-gear",
                            Label = "Settings",
                            Path = "/settings"
                        },
                        new
                        {
                            Id = 3,
                            Icon = "fa-user",
                            Label = "Profile",
                            Path = "/profile"
                        },
                        new
                        {
                            Id = 4,
                            Icon = "fa-diagram-project",
                            Label = "Projects",
                            Path = "/projects"
                        },
                        new
                        {
                            Id = 5,
                            Icon = "fa-graduation-cap",
                            Label = "Courses",
                            Path = "/courses"
                        },
                        new
                        {
                            Id = 6,
                            Icon = "fa-circle-user",
                            Label = "Friends",
                            Path = "/friends"
                        },
                        new
                        {
                            Id = 7,
                            Icon = "fa-file",
                            Label = "Files",
                            Path = "/files"
                        },
                        new
                        {
                            Id = 8,
                            Icon = "fa-credit-card",
                            Label = "Plans",
                            Path = "/plans"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
